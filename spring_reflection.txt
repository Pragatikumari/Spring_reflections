1.
  >> see the 2nd tutorial of javabrains for setting the enviroment.

  >>  on using BeanFactory() for dependency injection the directory structure should be like.
                         main class and triangle class under src
                         and spring.xml uunder the spring dir under the library  (check spring_demo)
                          BeanFactory factory = new XmlBeanFactory (new FileSystemResource("spring.xml"));
		          Triangle triangle = (Triangle)factory.getBean("triangle");  
                    
  >>ApplicationContext which is BIG BROTHER of BEANFactory, the javafiles remains int the name_of_proj dir under the src but thespring.xml      file goes under             the src dir(only) check spring_demo2  
                 ApplicationContext context = new ClassPathXmlApplicationContext("spring.xml");
		 Triangle triangle = (Triangle)context.getBean("triangle");

  >>we can intialise any variable in the class not having main function by using DI through propert tag in case of the getter and setter methodes.
    example 
        private int Type (int triangle.java)
        can be intialised using  
              <property name="Type"  value= "equilateral"></property>
         if the data name is type the setter function must named as settype() or setType();( spring_demo 2) 
